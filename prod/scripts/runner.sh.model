#!/bin/bash

set -e
trap 'rm -f .env; exit' EXIT INT TERM

echo "üì¢ Sourcing env from /etc/quicksilvra/quicksilvra-env.sh"
source /etc/quicksilvra/quicksilvra-env.sh

cd /opt/deploy/%%servicename%%

IMAGE_TAR_UNCOMPRESSED="%%IMAGE_TAR_UNCOMPRESSED%%"

echo "üê≥ Loading Docker image..."
sudo docker load -i "$IMAGE_TAR_UNCOMPRESSED"

echo "üìù Creating .env file for Docker Compose..."
cat <<EOF > .env
Quicksilvra_DataProtectionConfiguration__X509__FileName=${Quicksilvra_DataProtectionConfiguration__X509__FileName}
Quicksilvra_DataProtectionConfiguration__X509__Key=${Quicksilvra_DataProtectionConfiguration__X509__Key}
Quicksilvra_DataProtectionConfiguration__X509__Path=${Quicksilvra_DataProtectionConfiguration__X509__Path}
Quicksilvra_DataProtectionConfiguration__DataProtectionPath=${Quicksilvra_DataProtectionConfiguration__DataProtectionPath}
Quicksilvra_Prod_AuthorityInternalUri=${Quicksilvra_Prod_AuthorityInternalUri}
Quicksilvra_Prod_AuthorityExternalUri=${Quicksilvra_Prod_AuthorityExternalUri}
DuendeIdentityServerLicense=${DuendeIdentityServerLicense}
EOF


echo "üõë Stopping existing %%servicename%% container..."
docker compose -f docker-compose.yaml stop %%servicename%%
docker compose -f docker-compose.yaml rm -f %%servicename%%

echo "üöÄ Starting new %%servicename%% container..."
docker compose -f docker-compose.yaml up -d %%servicename%%
